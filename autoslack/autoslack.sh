#!/bin/bash

TEMPLATE=generic.SlackBuild.as

function usage
{
    echo "usage : $0 [-t template] config | config_file"
    exit 0
}

function help
{
    echo "usage : $0 [-t template] config | config_file"
    exit 0
}

function error
{
    echo "$0 : error : $1" >&2
    exit 10
}

[ $# -eq 0 ] && usage

[[ "$1" =~ "--help" ]] && help

# parse command line:
until [ -z $1 ]; do
    case $1 in
	-t)
	    TEMPLATE=$2
	    shift 2
	    ;;
	*) 
	    if [[ "$1x" =~ "-x" ]] && [ -z $2 ]; then
		SEND2STDOUT="x"
	    elif [ -z $2 ] || [[ "$2x" =~ "-x" ]]; then
		CFGFILE="$1"
	    else
		error "unknow argument - $1"
	    fi
	    shift 	    
	    ;;
    esac
done

echo "checking for $CFGFILE"
[ -z $CFGFILE ] && error "missing argument - configuration file"
[ -f $CFGFILE ] || error "configuration file not found - $CFGFILE"

CMDLINE=`which m4`

echo "# autogenerated" > conf.m4
while read line; do
    # skip comments:
    if echo $line | grep "^#" > /dev/null; then
	continue
    fi
	
    name=`echo $line | cut -d'=' -f1`
    val=`echo $line | cut -d'=' -f2`
    [ ! -z $name ] && echo "define(\`$name', \`$val')" >> conf.m4
done < $CFGFILE

CMDLINE=$CMDLINE" $TEMPLATE"

. $CFGFILE

if [ -z $SEND2STDOUT ]; then
    $CMDLINE > $AS_CFG_PRGNAM.SlackBuild
    chmod +x $AS_CFG_PRGNAM.SlackBuild
    echo "generated $AS_CFG_PRGNAM.SlackBuild"
else
    $CMDLINE
fi

